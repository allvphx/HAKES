// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: grpc_api/sstcache.proto

package grpc_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SstCacheReserveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Charge uint32 `protobuf:"varint,1,opt,name=charge,proto3" json:"charge,omitempty"`
}

func (x *SstCacheReserveRequest) Reset() {
	*x = SstCacheReserveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_sstcache_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SstCacheReserveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SstCacheReserveRequest) ProtoMessage() {}

func (x *SstCacheReserveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_sstcache_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SstCacheReserveRequest.ProtoReflect.Descriptor instead.
func (*SstCacheReserveRequest) Descriptor() ([]byte, []int) {
	return file_grpc_api_sstcache_proto_rawDescGZIP(), []int{0}
}

func (x *SstCacheReserveRequest) GetCharge() uint32 {
	if x != nil {
		return x.Charge
	}
	return 0
}

type SstCacheReserveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SstCacheReserveReply) Reset() {
	*x = SstCacheReserveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_sstcache_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SstCacheReserveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SstCacheReserveReply) ProtoMessage() {}

func (x *SstCacheReserveReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_sstcache_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SstCacheReserveReply.ProtoReflect.Descriptor instead.
func (*SstCacheReserveReply) Descriptor() ([]byte, []int) {
	return file_grpc_api_sstcache_proto_rawDescGZIP(), []int{1}
}

func (x *SstCacheReserveReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SstCacheReserveReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SstCacheReleaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Charge uint32 `protobuf:"varint,1,opt,name=charge,proto3" json:"charge,omitempty"`
}

func (x *SstCacheReleaseRequest) Reset() {
	*x = SstCacheReleaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_sstcache_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SstCacheReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SstCacheReleaseRequest) ProtoMessage() {}

func (x *SstCacheReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_sstcache_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SstCacheReleaseRequest.ProtoReflect.Descriptor instead.
func (*SstCacheReleaseRequest) Descriptor() ([]byte, []int) {
	return file_grpc_api_sstcache_proto_rawDescGZIP(), []int{2}
}

func (x *SstCacheReleaseRequest) GetCharge() uint32 {
	if x != nil {
		return x.Charge
	}
	return 0
}

type SstCacheReleaseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SstCacheReleaseReply) Reset() {
	*x = SstCacheReleaseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_sstcache_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SstCacheReleaseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SstCacheReleaseReply) ProtoMessage() {}

func (x *SstCacheReleaseReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_sstcache_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SstCacheReleaseReply.ProtoReflect.Descriptor instead.
func (*SstCacheReleaseReply) Descriptor() ([]byte, []int) {
	return file_grpc_api_sstcache_proto_rawDescGZIP(), []int{3}
}

func (x *SstCacheReleaseReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SstCacheReleaseReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SstCacheAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Charge uint32 `protobuf:"varint,2,opt,name=charge,proto3" json:"charge,omitempty"`
}

func (x *SstCacheAddRequest) Reset() {
	*x = SstCacheAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_sstcache_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SstCacheAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SstCacheAddRequest) ProtoMessage() {}

func (x *SstCacheAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_sstcache_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SstCacheAddRequest.ProtoReflect.Descriptor instead.
func (*SstCacheAddRequest) Descriptor() ([]byte, []int) {
	return file_grpc_api_sstcache_proto_rawDescGZIP(), []int{4}
}

func (x *SstCacheAddRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SstCacheAddRequest) GetCharge() uint32 {
	if x != nil {
		return x.Charge
	}
	return 0
}

type SstCacheDropRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Charge uint32 `protobuf:"varint,2,opt,name=charge,proto3" json:"charge,omitempty"`
}

func (x *SstCacheDropRequest) Reset() {
	*x = SstCacheDropRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_sstcache_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SstCacheDropRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SstCacheDropRequest) ProtoMessage() {}

func (x *SstCacheDropRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_sstcache_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SstCacheDropRequest.ProtoReflect.Descriptor instead.
func (*SstCacheDropRequest) Descriptor() ([]byte, []int) {
	return file_grpc_api_sstcache_proto_rawDescGZIP(), []int{5}
}

func (x *SstCacheDropRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SstCacheDropRequest) GetCharge() uint32 {
	if x != nil {
		return x.Charge
	}
	return 0
}

type SstCacheAddReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SstCacheAddReply) Reset() {
	*x = SstCacheAddReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_sstcache_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SstCacheAddReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SstCacheAddReply) ProtoMessage() {}

func (x *SstCacheAddReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_sstcache_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SstCacheAddReply.ProtoReflect.Descriptor instead.
func (*SstCacheAddReply) Descriptor() ([]byte, []int) {
	return file_grpc_api_sstcache_proto_rawDescGZIP(), []int{6}
}

func (x *SstCacheAddReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SstCacheAddReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SstCacheDropReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SstCacheDropReply) Reset() {
	*x = SstCacheDropReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_sstcache_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SstCacheDropReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SstCacheDropReply) ProtoMessage() {}

func (x *SstCacheDropReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_sstcache_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SstCacheDropReply.ProtoReflect.Descriptor instead.
func (*SstCacheDropReply) Descriptor() ([]byte, []int) {
	return file_grpc_api_sstcache_proto_rawDescGZIP(), []int{7}
}

func (x *SstCacheDropReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SstCacheDropReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_grpc_api_sstcache_proto protoreflect.FileDescriptor

var file_grpc_api_sstcache_proto_rawDesc = []byte{
	0x0a, 0x17, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x73, 0x74, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x68, 0x61, 0x6b, 0x65, 0x73,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x30, 0x0a, 0x16, 0x53, 0x73, 0x74, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x22, 0x42, 0x0a, 0x14, 0x53, 0x73, 0x74, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x30, 0x0a, 0x16,
	0x53, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x22, 0x42,
	0x0a, 0x14, 0x53, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x40, 0x0a, 0x12, 0x53, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x22, 0x41, 0x0a, 0x13, 0x53, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x22, 0x3e, 0x0a, 0x10, 0x53, 0x73, 0x74, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x3f, 0x0a, 0x11, 0x53, 0x73, 0x74, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xec, 0x02, 0x0a, 0x0b, 0x53, 0x73, 0x74,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x76, 0x63, 0x12, 0x5b, 0x0a, 0x0f, 0x53, 0x73, 0x74, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x23, 0x2e, 0x68, 0x61,
	0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x73, 0x74, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53,
	0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0f, 0x53, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x23, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x73, 0x74, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0b, 0x53, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x41, 0x64,
	0x64, 0x12, 0x1f, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x53, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x53, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0c, 0x53, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x44,
	0x72, 0x6f, 0x70, 0x12, 0x20, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x53, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x44, 0x72, 0x6f, 0x70,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x16, 0x5a, 0x14, 0x68, 0x61, 0x6b, 0x65, 0x73,
	0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_api_sstcache_proto_rawDescOnce sync.Once
	file_grpc_api_sstcache_proto_rawDescData = file_grpc_api_sstcache_proto_rawDesc
)

func file_grpc_api_sstcache_proto_rawDescGZIP() []byte {
	file_grpc_api_sstcache_proto_rawDescOnce.Do(func() {
		file_grpc_api_sstcache_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_api_sstcache_proto_rawDescData)
	})
	return file_grpc_api_sstcache_proto_rawDescData
}

var file_grpc_api_sstcache_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_grpc_api_sstcache_proto_goTypes = []interface{}{
	(*SstCacheReserveRequest)(nil), // 0: hakes_store.SstCacheReserveRequest
	(*SstCacheReserveReply)(nil),   // 1: hakes_store.SstCacheReserveReply
	(*SstCacheReleaseRequest)(nil), // 2: hakes_store.SstCacheReleaseRequest
	(*SstCacheReleaseReply)(nil),   // 3: hakes_store.SstCacheReleaseReply
	(*SstCacheAddRequest)(nil),     // 4: hakes_store.SstCacheAddRequest
	(*SstCacheDropRequest)(nil),    // 5: hakes_store.SstCacheDropRequest
	(*SstCacheAddReply)(nil),       // 6: hakes_store.SstCacheAddReply
	(*SstCacheDropReply)(nil),      // 7: hakes_store.SstCacheDropReply
}
var file_grpc_api_sstcache_proto_depIdxs = []int32{
	0, // 0: hakes_store.SstCacheSvc.SstCacheReserve:input_type -> hakes_store.SstCacheReserveRequest
	2, // 1: hakes_store.SstCacheSvc.SstCacheRelease:input_type -> hakes_store.SstCacheReleaseRequest
	4, // 2: hakes_store.SstCacheSvc.SstCacheAdd:input_type -> hakes_store.SstCacheAddRequest
	5, // 3: hakes_store.SstCacheSvc.SstCacheDrop:input_type -> hakes_store.SstCacheDropRequest
	1, // 4: hakes_store.SstCacheSvc.SstCacheReserve:output_type -> hakes_store.SstCacheReserveReply
	3, // 5: hakes_store.SstCacheSvc.SstCacheRelease:output_type -> hakes_store.SstCacheReleaseReply
	6, // 6: hakes_store.SstCacheSvc.SstCacheAdd:output_type -> hakes_store.SstCacheAddReply
	7, // 7: hakes_store.SstCacheSvc.SstCacheDrop:output_type -> hakes_store.SstCacheDropReply
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_grpc_api_sstcache_proto_init() }
func file_grpc_api_sstcache_proto_init() {
	if File_grpc_api_sstcache_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_api_sstcache_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SstCacheReserveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_sstcache_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SstCacheReserveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_sstcache_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SstCacheReleaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_sstcache_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SstCacheReleaseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_sstcache_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SstCacheAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_sstcache_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SstCacheDropRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_sstcache_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SstCacheAddReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_sstcache_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SstCacheDropReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_api_sstcache_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_api_sstcache_proto_goTypes,
		DependencyIndexes: file_grpc_api_sstcache_proto_depIdxs,
		MessageInfos:      file_grpc_api_sstcache_proto_msgTypes,
	}.Build()
	File_grpc_api_sstcache_proto = out.File
	file_grpc_api_sstcache_proto_rawDesc = nil
	file_grpc_api_sstcache_proto_goTypes = nil
	file_grpc_api_sstcache_proto_depIdxs = nil
}
