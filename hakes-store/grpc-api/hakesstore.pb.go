// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: grpc_api/hakesstore.proto

package grpc_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HakesStoreScanType int32

const (
	HakesStoreScanType_FIXEDCOUNTSCAN HakesStoreScanType = 0
	HakesStoreScanType_ENDKEYSCAN     HakesStoreScanType = 1
	HakesStoreScanType_FULLSCAN       HakesStoreScanType = 2
)

// Enum value maps for HakesStoreScanType.
var (
	HakesStoreScanType_name = map[int32]string{
		0: "FIXEDCOUNTSCAN",
		1: "ENDKEYSCAN",
		2: "FULLSCAN",
	}
	HakesStoreScanType_value = map[string]int32{
		"FIXEDCOUNTSCAN": 0,
		"ENDKEYSCAN":     1,
		"FULLSCAN":       2,
	}
)

func (x HakesStoreScanType) Enum() *HakesStoreScanType {
	p := new(HakesStoreScanType)
	*p = x
	return p
}

func (x HakesStoreScanType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HakesStoreScanType) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_api_hakesstore_proto_enumTypes[0].Descriptor()
}

func (HakesStoreScanType) Type() protoreflect.EnumType {
	return &file_grpc_api_hakesstore_proto_enumTypes[0]
}

func (x HakesStoreScanType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HakesStoreScanType.Descriptor instead.
func (HakesStoreScanType) EnumDescriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{0}
}

type HakesStoreGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *HakesStoreGetRequest) Reset() {
	*x = HakesStoreGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HakesStoreGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HakesStoreGetRequest) ProtoMessage() {}

func (x *HakesStoreGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HakesStoreGetRequest.ProtoReflect.Descriptor instead.
func (*HakesStoreGetRequest) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{0}
}

func (x *HakesStoreGetRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type HakesStoreGetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Found   bool   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	Val     []byte `protobuf:"bytes,3,opt,name=val,proto3" json:"val,omitempty"`
	ErrMsg  string `protobuf:"bytes,4,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *HakesStoreGetReply) Reset() {
	*x = HakesStoreGetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HakesStoreGetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HakesStoreGetReply) ProtoMessage() {}

func (x *HakesStoreGetReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HakesStoreGetReply.ProtoReflect.Descriptor instead.
func (*HakesStoreGetReply) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{1}
}

func (x *HakesStoreGetReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HakesStoreGetReply) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (x *HakesStoreGetReply) GetVal() []byte {
	if x != nil {
		return x.Val
	}
	return nil
}

func (x *HakesStoreGetReply) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type HakesStorePutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val []byte `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *HakesStorePutRequest) Reset() {
	*x = HakesStorePutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HakesStorePutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HakesStorePutRequest) ProtoMessage() {}

func (x *HakesStorePutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HakesStorePutRequest.ProtoReflect.Descriptor instead.
func (*HakesStorePutRequest) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{2}
}

func (x *HakesStorePutRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *HakesStorePutRequest) GetVal() []byte {
	if x != nil {
		return x.Val
	}
	return nil
}

type HakesStorePutReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *HakesStorePutReply) Reset() {
	*x = HakesStorePutReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HakesStorePutReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HakesStorePutReply) ProtoMessage() {}

func (x *HakesStorePutReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HakesStorePutReply.ProtoReflect.Descriptor instead.
func (*HakesStorePutReply) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{3}
}

func (x *HakesStorePutReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HakesStorePutReply) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type HakesStoreDelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *HakesStoreDelRequest) Reset() {
	*x = HakesStoreDelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HakesStoreDelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HakesStoreDelRequest) ProtoMessage() {}

func (x *HakesStoreDelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HakesStoreDelRequest.ProtoReflect.Descriptor instead.
func (*HakesStoreDelRequest) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{4}
}

func (x *HakesStoreDelRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type HakesStoreDelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *HakesStoreDelReply) Reset() {
	*x = HakesStoreDelReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HakesStoreDelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HakesStoreDelReply) ProtoMessage() {}

func (x *HakesStoreDelReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HakesStoreDelReply.ProtoReflect.Descriptor instead.
func (*HakesStoreDelReply) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{5}
}

func (x *HakesStoreDelReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HakesStoreDelReply) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type HakesStoreScanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     HakesStoreScanType `protobuf:"varint,1,opt,name=type,proto3,enum=hakes_store.HakesStoreScanType" json:"type,omitempty"`
	Count    uint32             `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	StartKey []byte             `protobuf:"bytes,3,opt,name=startKey,proto3" json:"startKey,omitempty"`
	EndKey   []byte             `protobuf:"bytes,4,opt,name=endKey,proto3" json:"endKey,omitempty"`
}

func (x *HakesStoreScanRequest) Reset() {
	*x = HakesStoreScanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HakesStoreScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HakesStoreScanRequest) ProtoMessage() {}

func (x *HakesStoreScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HakesStoreScanRequest.ProtoReflect.Descriptor instead.
func (*HakesStoreScanRequest) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{6}
}

func (x *HakesStoreScanRequest) GetType() HakesStoreScanType {
	if x != nil {
		return x.Type
	}
	return HakesStoreScanType_FIXEDCOUNTSCAN
}

func (x *HakesStoreScanRequest) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *HakesStoreScanRequest) GetStartKey() []byte {
	if x != nil {
		return x.StartKey
	}
	return nil
}

func (x *HakesStoreScanRequest) GetEndKey() []byte {
	if x != nil {
		return x.EndKey
	}
	return nil
}

type HakesStoreScanReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Count   uint32   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	KeySet  [][]byte `protobuf:"bytes,3,rep,name=keySet,proto3" json:"keySet,omitempty"`
	ValSet  [][]byte `protobuf:"bytes,4,rep,name=valSet,proto3" json:"valSet,omitempty"`
	ErrMsg  string   `protobuf:"bytes,5,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *HakesStoreScanReply) Reset() {
	*x = HakesStoreScanReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HakesStoreScanReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HakesStoreScanReply) ProtoMessage() {}

func (x *HakesStoreScanReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HakesStoreScanReply.ProtoReflect.Descriptor instead.
func (*HakesStoreScanReply) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{7}
}

func (x *HakesStoreScanReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HakesStoreScanReply) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *HakesStoreScanReply) GetKeySet() [][]byte {
	if x != nil {
		return x.KeySet
	}
	return nil
}

func (x *HakesStoreScanReply) GetValSet() [][]byte {
	if x != nil {
		return x.ValSet
	}
	return nil
}

func (x *HakesStoreScanReply) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type InOpenLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogName string `protobuf:"bytes,1,opt,name=logName,proto3" json:"logName,omitempty"`
	MaxSz   uint32 `protobuf:"varint,2,opt,name=maxSz,proto3" json:"maxSz,omitempty"`
}

func (x *InOpenLogRequest) Reset() {
	*x = InOpenLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InOpenLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InOpenLogRequest) ProtoMessage() {}

func (x *InOpenLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InOpenLogRequest.ProtoReflect.Descriptor instead.
func (*InOpenLogRequest) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{8}
}

func (x *InOpenLogRequest) GetLogName() string {
	if x != nil {
		return x.LogName
	}
	return ""
}

func (x *InOpenLogRequest) GetMaxSz() uint32 {
	if x != nil {
		return x.MaxSz
	}
	return 0
}

type InOpenLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *InOpenLogReply) Reset() {
	*x = InOpenLogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InOpenLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InOpenLogReply) ProtoMessage() {}

func (x *InOpenLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InOpenLogReply.ProtoReflect.Descriptor instead.
func (*InOpenLogReply) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{9}
}

func (x *InOpenLogReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InOpenLogReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type InAppendLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogName string `protobuf:"bytes,1,opt,name=logName,proto3" json:"logName,omitempty"`
	Offset  uint32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Data    []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *InAppendLogRequest) Reset() {
	*x = InAppendLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InAppendLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InAppendLogRequest) ProtoMessage() {}

func (x *InAppendLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InAppendLogRequest.ProtoReflect.Descriptor instead.
func (*InAppendLogRequest) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{10}
}

func (x *InAppendLogRequest) GetLogName() string {
	if x != nil {
		return x.LogName
	}
	return ""
}

func (x *InAppendLogRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *InAppendLogRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type LogDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogName  string `protobuf:"bytes,1,opt,name=logName,proto3" json:"logName,omitempty"`
	StartOff uint32 `protobuf:"varint,2,opt,name=startOff,proto3" json:"startOff,omitempty"`
	EndOff   uint32 `protobuf:"varint,3,opt,name=endOff,proto3" json:"endOff,omitempty"`
}

func (x *LogDataRequest) Reset() {
	*x = LogDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogDataRequest) ProtoMessage() {}

func (x *LogDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogDataRequest.ProtoReflect.Descriptor instead.
func (*LogDataRequest) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{11}
}

func (x *LogDataRequest) GetLogName() string {
	if x != nil {
		return x.LogName
	}
	return ""
}

func (x *LogDataRequest) GetStartOff() uint32 {
	if x != nil {
		return x.StartOff
	}
	return 0
}

func (x *LogDataRequest) GetEndOff() uint32 {
	if x != nil {
		return x.EndOff
	}
	return 0
}

type InAppendLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool            `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	HaveReq bool            `protobuf:"varint,2,opt,name=haveReq,proto3" json:"haveReq,omitempty"`
	Req     *LogDataRequest `protobuf:"bytes,3,opt,name=req,proto3" json:"req,omitempty"`
}

func (x *InAppendLogReply) Reset() {
	*x = InAppendLogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InAppendLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InAppendLogReply) ProtoMessage() {}

func (x *InAppendLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InAppendLogReply.ProtoReflect.Descriptor instead.
func (*InAppendLogReply) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{12}
}

func (x *InAppendLogReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InAppendLogReply) GetHaveReq() bool {
	if x != nil {
		return x.HaveReq
	}
	return false
}

func (x *InAppendLogReply) GetReq() *LogDataRequest {
	if x != nil {
		return x.Req
	}
	return nil
}

type InDropLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogName string `protobuf:"bytes,1,opt,name=logName,proto3" json:"logName,omitempty"`
}

func (x *InDropLogRequest) Reset() {
	*x = InDropLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InDropLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InDropLogRequest) ProtoMessage() {}

func (x *InDropLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InDropLogRequest.ProtoReflect.Descriptor instead.
func (*InDropLogRequest) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{13}
}

func (x *InDropLogRequest) GetLogName() string {
	if x != nil {
		return x.LogName
	}
	return ""
}

type InDropLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *InDropLogReply) Reset() {
	*x = InDropLogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InDropLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InDropLogReply) ProtoMessage() {}

func (x *InDropLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InDropLogReply.ProtoReflect.Descriptor instead.
func (*InDropLogReply) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{14}
}

func (x *InDropLogReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InDropLogReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type InUpdateManifestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManifestId uint32 `protobuf:"varint,1,opt,name=manifestId,proto3" json:"manifestId,omitempty"`
	Data       []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *InUpdateManifestRequest) Reset() {
	*x = InUpdateManifestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InUpdateManifestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InUpdateManifestRequest) ProtoMessage() {}

func (x *InUpdateManifestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InUpdateManifestRequest.ProtoReflect.Descriptor instead.
func (*InUpdateManifestRequest) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{15}
}

func (x *InUpdateManifestRequest) GetManifestId() uint32 {
	if x != nil {
		return x.ManifestId
	}
	return 0
}

func (x *InUpdateManifestRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type InUpdateManifestReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *InUpdateManifestReply) Reset() {
	*x = InUpdateManifestReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InUpdateManifestReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InUpdateManifestReply) ProtoMessage() {}

func (x *InUpdateManifestReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InUpdateManifestReply.ProtoReflect.Descriptor instead.
func (*InUpdateManifestReply) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{16}
}

func (x *InUpdateManifestReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InUpdateManifestReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type LogDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogName  string `protobuf:"bytes,1,opt,name=logName,proto3" json:"logName,omitempty"`
	Dropped  bool   `protobuf:"varint,2,opt,name=dropped,proto3" json:"dropped,omitempty"`
	StartOff uint32 `protobuf:"varint,3,opt,name=startOff,proto3" json:"startOff,omitempty"`
	EndOff   uint32 `protobuf:"varint,4,opt,name=endOff,proto3" json:"endOff,omitempty"`
	Capacity uint32 `protobuf:"varint,5,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Data     []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *LogDiff) Reset() {
	*x = LogDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogDiff) ProtoMessage() {}

func (x *LogDiff) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogDiff.ProtoReflect.Descriptor instead.
func (*LogDiff) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{17}
}

func (x *LogDiff) GetLogName() string {
	if x != nil {
		return x.LogName
	}
	return ""
}

func (x *LogDiff) GetDropped() bool {
	if x != nil {
		return x.Dropped
	}
	return false
}

func (x *LogDiff) GetStartOff() uint32 {
	if x != nil {
		return x.StartOff
	}
	return 0
}

func (x *LogDiff) GetEndOff() uint32 {
	if x != nil {
		return x.EndOff
	}
	return 0
}

func (x *LogDiff) GetCapacity() uint32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *LogDiff) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type InSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManifestId     uint32 `protobuf:"varint,1,opt,name=manifestId,proto3" json:"manifestId,omitempty"`
	RequireData    bool   `protobuf:"varint,2,opt,name=requireData,proto3" json:"requireData,omitempty"`
	LastLogName    string `protobuf:"bytes,3,opt,name=lastLogName,proto3" json:"lastLogName,omitempty"`
	LastLogDropped bool   `protobuf:"varint,4,opt,name=lastLogDropped,proto3" json:"lastLogDropped,omitempty"`
	LastLogTail    uint32 `protobuf:"varint,5,opt,name=lastLogTail,proto3" json:"lastLogTail,omitempty"`
}

func (x *InSnapshotRequest) Reset() {
	*x = InSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InSnapshotRequest) ProtoMessage() {}

func (x *InSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InSnapshotRequest.ProtoReflect.Descriptor instead.
func (*InSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{18}
}

func (x *InSnapshotRequest) GetManifestId() uint32 {
	if x != nil {
		return x.ManifestId
	}
	return 0
}

func (x *InSnapshotRequest) GetRequireData() bool {
	if x != nil {
		return x.RequireData
	}
	return false
}

func (x *InSnapshotRequest) GetLastLogName() string {
	if x != nil {
		return x.LastLogName
	}
	return ""
}

func (x *InSnapshotRequest) GetLastLogDropped() bool {
	if x != nil {
		return x.LastLogDropped
	}
	return false
}

func (x *InSnapshotRequest) GetLastLogTail() uint32 {
	if x != nil {
		return x.LastLogTail
	}
	return 0
}

// if the log data out-of-sync is high, then each reply can contain a subset of data in missLogBytes,
// upon receiving the missing log bytes, the leader can judge if he should ask for more by sending GetSnapshot with a more recent tail again
type InSnapshotReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// return the callee snapshot/state summary
	ManifestId     uint32 `protobuf:"varint,2,opt,name=manifestId,proto3" json:"manifestId,omitempty"`
	LastLogName    string `protobuf:"bytes,3,opt,name=lastLogName,proto3" json:"lastLogName,omitempty"`
	LastLogDropped bool   `protobuf:"varint,4,opt,name=lastLogDropped,proto3" json:"lastLogDropped,omitempty"`
	LastLogTail    uint32 `protobuf:"varint,5,opt,name=lastLogTail,proto3" json:"lastLogTail,omitempty"`
	// if there is mismatch from caller, caller return these data
	// should be small
	ManifestBytes []byte     `protobuf:"bytes,6,opt,name=manifestBytes,proto3" json:"manifestBytes,omitempty"`
	Logdiffs      []*LogDiff `protobuf:"bytes,7,rep,name=logdiffs,proto3" json:"logdiffs,omitempty"`
}

func (x *InSnapshotReply) Reset() {
	*x = InSnapshotReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InSnapshotReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InSnapshotReply) ProtoMessage() {}

func (x *InSnapshotReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InSnapshotReply.ProtoReflect.Descriptor instead.
func (*InSnapshotReply) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{19}
}

func (x *InSnapshotReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InSnapshotReply) GetManifestId() uint32 {
	if x != nil {
		return x.ManifestId
	}
	return 0
}

func (x *InSnapshotReply) GetLastLogName() string {
	if x != nil {
		return x.LastLogName
	}
	return ""
}

func (x *InSnapshotReply) GetLastLogDropped() bool {
	if x != nil {
		return x.LastLogDropped
	}
	return false
}

func (x *InSnapshotReply) GetLastLogTail() uint32 {
	if x != nil {
		return x.LastLogTail
	}
	return 0
}

func (x *InSnapshotReply) GetManifestBytes() []byte {
	if x != nil {
		return x.ManifestBytes
	}
	return nil
}

func (x *InSnapshotReply) GetLogdiffs() []*LogDiff {
	if x != nil {
		return x.Logdiffs
	}
	return nil
}

type InFlushRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogName string `protobuf:"bytes,1,opt,name=logName,proto3" json:"logName,omitempty"` // the id of log that needs to be flushed for the caller to consider sync.
}

func (x *InFlushRequest) Reset() {
	*x = InFlushRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InFlushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InFlushRequest) ProtoMessage() {}

func (x *InFlushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InFlushRequest.ProtoReflect.Descriptor instead.
func (*InFlushRequest) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{20}
}

func (x *InFlushRequest) GetLogName() string {
	if x != nil {
		return x.LogName
	}
	return ""
}

type InFlushReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *InFlushReply) Reset() {
	*x = InFlushReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_api_hakesstore_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InFlushReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InFlushReply) ProtoMessage() {}

func (x *InFlushReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_api_hakesstore_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InFlushReply.ProtoReflect.Descriptor instead.
func (*InFlushReply) Descriptor() ([]byte, []int) {
	return file_grpc_api_hakesstore_proto_rawDescGZIP(), []int{21}
}

func (x *InFlushReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InFlushReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_grpc_api_hakesstore_proto protoreflect.FileDescriptor

var file_grpc_api_hakesstore_proto_rawDesc = []byte{
	0x0a, 0x19, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x61, 0x6b, 0x65, 0x73,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x68, 0x61, 0x6b,
	0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x28, 0x0a, 0x14, 0x48, 0x61, 0x6b, 0x65,
	0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x22, 0x6e, 0x0a, 0x12, 0x48, 0x61, 0x6b, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d,
	0x73, 0x67, 0x22, 0x3a, 0x0a, 0x14, 0x48, 0x61, 0x6b, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x46,
	0x0a, 0x12, 0x48, 0x61, 0x6b, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x75, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x28, 0x0a, 0x14, 0x48, 0x61, 0x6b, 0x65, 0x73, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x22, 0x46, 0x0a, 0x12, 0x48, 0x61, 0x6b, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x96, 0x01, 0x0a, 0x15, 0x48, 0x61, 0x6b,
	0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x48,
	0x61, 0x6b, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x64,
	0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x4b, 0x65,
	0x79, 0x22, 0x8d, 0x01, 0x0a, 0x13, 0x48, 0x61, 0x6b, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6b, 0x65, 0x79,
	0x53, 0x65, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x53, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x22, 0x42, 0x0a, 0x10, 0x49, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x61, 0x78, 0x53, 0x7a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6d, 0x61, 0x78, 0x53, 0x7a, 0x22, 0x3c, 0x0a, 0x0e, 0x49, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x5a, 0x0a, 0x12, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x5e, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x4f, 0x66,
	0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x22,
	0x75, 0x0a, 0x10, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x03, 0x72, 0x65, 0x71, 0x22, 0x2c, 0x0a, 0x10, 0x49, 0x6e, 0x44, 0x72, 0x6f, 0x70,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x0e, 0x49, 0x6e, 0x44, 0x72, 0x6f, 0x70, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x4d, 0x0a, 0x17, 0x49, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x43, 0x0a, 0x15, 0x49, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xa1, 0x01, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x44, 0x69,
	0x66, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64,
	0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f,
	0x66, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f,
	0x66, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc1, 0x01, 0x0a, 0x11, 0x49,
	0x6e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x44,
	0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6c, 0x61,
	0x73, 0x74, 0x4c, 0x6f, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x54, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x54, 0x61, 0x69, 0x6c, 0x22, 0x8f,
	0x02, 0x0a, 0x0f, 0x49, 0x6e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x44,
	0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x54, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x61, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x54, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x30,
	0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x64, 0x69, 0x66, 0x66, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4c,
	0x6f, 0x67, 0x44, 0x69, 0x66, 0x66, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x64, 0x69, 0x66, 0x66, 0x73,
	0x22, 0x2a, 0x0a, 0x0e, 0x49, 0x6e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x0c,
	0x49, 0x6e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x2a, 0x46, 0x0a, 0x12, 0x48, 0x61, 0x6b, 0x65,
	0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x0e, 0x46, 0x49, 0x58, 0x45, 0x44, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x53, 0x43, 0x41, 0x4e,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4e, 0x44, 0x4b, 0x45, 0x59, 0x53, 0x43, 0x41, 0x4e,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x55, 0x4c, 0x4c, 0x53, 0x43, 0x41, 0x4e, 0x10, 0x02,
	0x32, 0xa7, 0x06, 0x0a, 0x0d, 0x48, 0x61, 0x6b, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4b,
	0x56, 0x52, 0x12, 0x4b, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x68, 0x61, 0x6b, 0x65,
	0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x48, 0x61, 0x6b, 0x65, 0x73, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68,
	0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x48, 0x61, 0x6b, 0x65, 0x73,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x4b, 0x0a, 0x03, 0x50, 0x75, 0x74, 0x12, 0x21, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x48, 0x61, 0x6b, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50,
	0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x6b, 0x65,
	0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x48, 0x61, 0x6b, 0x65, 0x73, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x50, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x03,
	0x44, 0x65, 0x6c, 0x12, 0x21, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x48, 0x61, 0x6b, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x48, 0x61, 0x6b, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44,
	0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x04, 0x53, 0x63, 0x61,
	0x6e, 0x12, 0x22, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x48, 0x61, 0x6b, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x48, 0x61, 0x6b, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x63,
	0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x09, 0x49, 0x6e, 0x4f,
	0x70, 0x65, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x1d, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0b, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x4c, 0x6f, 0x67, 0x12, 0x1f, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x09, 0x49, 0x6e, 0x44, 0x72, 0x6f, 0x70, 0x4c,
	0x6f, 0x67, 0x12, 0x1d, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x49, 0x6e, 0x44, 0x72, 0x6f, 0x70, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x49, 0x6e, 0x44, 0x72, 0x6f, 0x70, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x5e, 0x0a, 0x10, 0x49, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x49, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x68, 0x61, 0x6b,
	0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x0d, 0x49, 0x6e, 0x47, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x12, 0x1e, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x49, 0x6e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x49, 0x6e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x47, 0x0a, 0x0b, 0x49, 0x6e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x53, 0x79, 0x6e, 0x63,
	0x12, 0x1b, 0x2e, 0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x49,
	0x6e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x68, 0x61, 0x6b, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x46, 0x6c,
	0x75, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x16, 0x5a, 0x14, 0x68, 0x61,
	0x6b, 0x65, 0x73, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x61,
	0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_api_hakesstore_proto_rawDescOnce sync.Once
	file_grpc_api_hakesstore_proto_rawDescData = file_grpc_api_hakesstore_proto_rawDesc
)

func file_grpc_api_hakesstore_proto_rawDescGZIP() []byte {
	file_grpc_api_hakesstore_proto_rawDescOnce.Do(func() {
		file_grpc_api_hakesstore_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_api_hakesstore_proto_rawDescData)
	})
	return file_grpc_api_hakesstore_proto_rawDescData
}

var file_grpc_api_hakesstore_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_grpc_api_hakesstore_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_grpc_api_hakesstore_proto_goTypes = []interface{}{
	(HakesStoreScanType)(0),         // 0: hakes_store.HakesStoreScanType
	(*HakesStoreGetRequest)(nil),    // 1: hakes_store.HakesStoreGetRequest
	(*HakesStoreGetReply)(nil),      // 2: hakes_store.HakesStoreGetReply
	(*HakesStorePutRequest)(nil),    // 3: hakes_store.HakesStorePutRequest
	(*HakesStorePutReply)(nil),      // 4: hakes_store.HakesStorePutReply
	(*HakesStoreDelRequest)(nil),    // 5: hakes_store.HakesStoreDelRequest
	(*HakesStoreDelReply)(nil),      // 6: hakes_store.HakesStoreDelReply
	(*HakesStoreScanRequest)(nil),   // 7: hakes_store.HakesStoreScanRequest
	(*HakesStoreScanReply)(nil),     // 8: hakes_store.HakesStoreScanReply
	(*InOpenLogRequest)(nil),        // 9: hakes_store.InOpenLogRequest
	(*InOpenLogReply)(nil),          // 10: hakes_store.InOpenLogReply
	(*InAppendLogRequest)(nil),      // 11: hakes_store.InAppendLogRequest
	(*LogDataRequest)(nil),          // 12: hakes_store.LogDataRequest
	(*InAppendLogReply)(nil),        // 13: hakes_store.InAppendLogReply
	(*InDropLogRequest)(nil),        // 14: hakes_store.InDropLogRequest
	(*InDropLogReply)(nil),          // 15: hakes_store.InDropLogReply
	(*InUpdateManifestRequest)(nil), // 16: hakes_store.InUpdateManifestRequest
	(*InUpdateManifestReply)(nil),   // 17: hakes_store.InUpdateManifestReply
	(*LogDiff)(nil),                 // 18: hakes_store.LogDiff
	(*InSnapshotRequest)(nil),       // 19: hakes_store.InSnapshotRequest
	(*InSnapshotReply)(nil),         // 20: hakes_store.InSnapshotReply
	(*InFlushRequest)(nil),          // 21: hakes_store.InFlushRequest
	(*InFlushReply)(nil),            // 22: hakes_store.InFlushReply
}
var file_grpc_api_hakesstore_proto_depIdxs = []int32{
	0,  // 0: hakes_store.HakesStoreScanRequest.type:type_name -> hakes_store.HakesStoreScanType
	12, // 1: hakes_store.InAppendLogReply.req:type_name -> hakes_store.LogDataRequest
	18, // 2: hakes_store.InSnapshotReply.logdiffs:type_name -> hakes_store.LogDiff
	1,  // 3: hakes_store.HakesStoreKVR.Get:input_type -> hakes_store.HakesStoreGetRequest
	3,  // 4: hakes_store.HakesStoreKVR.Put:input_type -> hakes_store.HakesStorePutRequest
	5,  // 5: hakes_store.HakesStoreKVR.Del:input_type -> hakes_store.HakesStoreDelRequest
	7,  // 6: hakes_store.HakesStoreKVR.Scan:input_type -> hakes_store.HakesStoreScanRequest
	9,  // 7: hakes_store.HakesStoreKVR.InOpenLog:input_type -> hakes_store.InOpenLogRequest
	11, // 8: hakes_store.HakesStoreKVR.InAppendLog:input_type -> hakes_store.InAppendLogRequest
	14, // 9: hakes_store.HakesStoreKVR.InDropLog:input_type -> hakes_store.InDropLogRequest
	16, // 10: hakes_store.HakesStoreKVR.InUpdateManifest:input_type -> hakes_store.InUpdateManifestRequest
	19, // 11: hakes_store.HakesStoreKVR.InGetSnapshot:input_type -> hakes_store.InSnapshotRequest
	21, // 12: hakes_store.HakesStoreKVR.InFlushSync:input_type -> hakes_store.InFlushRequest
	2,  // 13: hakes_store.HakesStoreKVR.Get:output_type -> hakes_store.HakesStoreGetReply
	4,  // 14: hakes_store.HakesStoreKVR.Put:output_type -> hakes_store.HakesStorePutReply
	6,  // 15: hakes_store.HakesStoreKVR.Del:output_type -> hakes_store.HakesStoreDelReply
	8,  // 16: hakes_store.HakesStoreKVR.Scan:output_type -> hakes_store.HakesStoreScanReply
	10, // 17: hakes_store.HakesStoreKVR.InOpenLog:output_type -> hakes_store.InOpenLogReply
	13, // 18: hakes_store.HakesStoreKVR.InAppendLog:output_type -> hakes_store.InAppendLogReply
	15, // 19: hakes_store.HakesStoreKVR.InDropLog:output_type -> hakes_store.InDropLogReply
	17, // 20: hakes_store.HakesStoreKVR.InUpdateManifest:output_type -> hakes_store.InUpdateManifestReply
	20, // 21: hakes_store.HakesStoreKVR.InGetSnapshot:output_type -> hakes_store.InSnapshotReply
	22, // 22: hakes_store.HakesStoreKVR.InFlushSync:output_type -> hakes_store.InFlushReply
	13, // [13:23] is the sub-list for method output_type
	3,  // [3:13] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_grpc_api_hakesstore_proto_init() }
func file_grpc_api_hakesstore_proto_init() {
	if File_grpc_api_hakesstore_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_api_hakesstore_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HakesStoreGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HakesStoreGetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HakesStorePutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HakesStorePutReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HakesStoreDelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HakesStoreDelReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HakesStoreScanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HakesStoreScanReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InOpenLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InOpenLogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InAppendLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InAppendLogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InDropLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InDropLogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InUpdateManifestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InUpdateManifestReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InSnapshotReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InFlushRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_api_hakesstore_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InFlushReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_api_hakesstore_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_api_hakesstore_proto_goTypes,
		DependencyIndexes: file_grpc_api_hakesstore_proto_depIdxs,
		EnumInfos:         file_grpc_api_hakesstore_proto_enumTypes,
		MessageInfos:      file_grpc_api_hakesstore_proto_msgTypes,
	}.Build()
	File_grpc_api_hakesstore_proto = out.File
	file_grpc_api_hakesstore_proto_rawDesc = nil
	file_grpc_api_hakesstore_proto_goTypes = nil
	file_grpc_api_hakesstore_proto_depIdxs = nil
}
